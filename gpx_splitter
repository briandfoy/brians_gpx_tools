#!/Users/brian/bin/perl
use v5.10;

use IO::Interactive qw(is_interactive);

use Mojo::DOM;
use Mojo::File;
use Mojo::Util qw(dumper);

my $file = Mojo::File->new($ARGV[0]);

my $dir = $file->dirname;
chdir $dir;

my $contents = $file->slurp;

my $wrapper = do {
	my $dom = Mojo::DOM->new( $contents )->xml(1);
	$dom->find( 'gpx trk' )->map( sub { $_->remove } );
	$dom = $dom->at('gpx')->append_content( $dom->new_tag( 'trk' ) )->root;
	};

my $tracks = Mojo::DOM->new( $contents )->xml(1)->find( 'gpx trk' )->to_array;
unless( $tracks->@* > 1 ) {
	say STDERR "Found single track - nothing to split" if is_interactive();
	exit;
	}

foreach my $track ( $tracks->@* ) {
	state $n = 0;
	$n++;
	say STDERR "Splitting track $n" if is_interactive();

	my $new = $wrapper->at( 'trk' )->replace($track);

	open my $fh, '>', $ARGV[0] =~ s/(?=\.gpx)/-track-$n/r;
	say $fh qq(<?xml version="1.0"?>\n$new);
	close $fh;
	}

rename $ARGV[0] => "$ARGV[0].bak";

=encoding utf8

=head1 NAME

gpx_splitter - split a multi-track .gpx file into multiple single track .gpx files

=head1 SYNOPSIS

I can run this from the command line:

	$ gpx_splitter some.gpx

=head1 DESCRIPTION

I have some tools that can only handle single track files, so this converts
multi-track files into single-track files. I wich I could easily do this
in F<gpsbabel>, but apparently I can't.

=head1 SOURCE

The source is at L<https://github.com/briandfoy/brians_gpx_tools>.

The repos are also stored at other services as noted in the README.

=head1 LICENSE

This code is available under the Artistic License 2.0. A LICENSE file
should have come with the repo, but you can also see the license at
L<https://opensource.org/license/artistic-2-0/>

=head1 AUTHOR

brian d foy, briandfoy@pobox.com

=cut

